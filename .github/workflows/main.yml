name: Build

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build app
        run: npm run build

  docker:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/PIS22Z/frontend
          tags: |
            type=sha
            type=raw,value=latest
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      actions: read
    environment: staging
    steps:
      - uses: actions/checkout@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/PIS22Z/frontend
          tags: |
            type=sha
      - uses: azure/setup-kubectl@v3
      - uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}
        id: setcontext
      - uses: Azure/k8s-deploy@v4.5
        with:
          namespace: 'pis'
          action: deploy
          strategy: basic
          manifests: |
            k8s/frontend-deployment.yaml
          images: ${{ steps.meta.outputs.tags }}
